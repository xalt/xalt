#!/bin/bash
# -*- shell-script -*-
#-----------------------------------------------------------------------
#XALT: A tool that tracks users jobs and environments on a cluster.
#Copyright (C) 2013-2014 University of Texas at Austin Copyright (C)
#2013-2014 University of Tennessee
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of 
# the License, or (at your option) any later version. 
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser  General Public License for more details. 
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free
# Software Foundation, Inc., 59 Temple Place, Suite 330,
# Boston, MA 02111-1307 USA
#-----------------------------------------------------------------------
PKG_VERSION=`cat .version`
echo Making Version: $PKG_VERSION

runMe()
{
  local cmdA=("$@")

  local j
  local jj
  local i
  local ignoreError
  local j=0
  for i in "${cmdA[@]}" ; do
    ignoreError=
    if [ "x${i:0:1}" = x- ]; then
      i=${i:1}
      ignoreError=1
    fi

    j=$((j+1))
    jj=$(printf "%02d" $j)
    echo
    echo "%%---------------------------------%%"
    echo "   " $jj: $i
    echo "%%---------------------------------%%"
    echo

    eval $i
    if [ -z "$ignoreError" -a $? != 0 ]; then
      break
    fi
  done
}

if [ -z "$SYSHOST" ]; then
  myhost=$(hostname -f)
  myhost=${myhost%.tacc.utexas.edu}
  myhost=${myhost%.local}
  first=${myhost%%.*}
  if [ "$first" = xalt ]; then
    export SYSHOST=xalt
  else
    export SYSHOST=${myhost#*.}
  fi
fi

SETUP_CMD=

echo SYSHOST: $SYSHOST

case $SYSHOST in
  vato | rios | jedrik | lmod-test | xalt-lmod | bt | bt2)
    echo "Building on $SYSHOST using rios rules"
    SUDO="sudo"
    base="/opt/apps"
    ETC_DIR="/opt/moduleData"
    SYSHOST_CONF="nth_name:2"
    CONFIG="../Config/rtm_config.py"
    TRANSMISSION="file"
    TRACK_GPU="no"
    MYSQL="yes"
    CONF_OPTS="--with-supportCURL=no --with-containerSupport=yes"
    MAKE_OPTS=""
    ;;

   vmijo | test-vmijo )
    echo "Building on $SYSHOST"
    SUDO="sudo"
    base="/opt/apps"
    ETC_DIR="/opt/moduleData"
    SYSHOST_CONF="nth_name:2"
    CONFIG="../Config/rtm_config.py"
    TRANSMISSION="file"
    TRACK_GPU="no"
    MYSQL="yes"
    CONF_OPTS=""
    MAKE_OPTS=""
    ;;

  xalt | xalt-00 | xalt-01 | xalt-02 )
    echo "Building xalt"
    base="$HOME/l/pkg"
    ETC_DIR="$HOME/l/moduleData"
    SYSHOST_CONF="nth_name:2"
    CONFIG="../Config/TACC_config.py"
    TRANSMISSION="file"
    TRACK_GPU="no"
    MYSQL="yes"
    CONF_OPTS="--with-supportCURL=no --with-containerSupport=no"
    MAKE_OPTS=""
    ;;

  stampede3 | vista)
    echo "Building $SYSHOST"
    base="$HOME/l/pkg"
    ETC_DIR="/tmp/moduleData"
    SYSHOST_CONF="nth_name:2"
    CONFIG="../Config/TACC_config.py"
    TRANSMISSION="file"
    TRACK_GPU="no"
    MYSQL="no"
    CONF_OPTS=''
    MAKE_OPTS=''
    SETUP_CMD="module -q unload $LMOD_FAMILY_MPI $LMOD_FAMILY_COMPILER xalt"
    ;;

  frontera)
    echo "Building $SYSHOST"
    base="$HOME/l/pkg"
    if [ -x $HOME/.up/bin/arch.py ]; then
      base="$base/$($HOME/.up/bin/arch.py)"
    else
      base="$base/$(uname -m)"
    fi
    ETC_DIR="/tmp/moduleData"
    SYSHOST_CONF="nth_name:2"
    CONFIG="../Config/TACC_config.py"
    TRANSMISSION="file"
    TRACK_GPU="nvml"
    MYSQL="no"
    CONF_OPTS='CPPFLAGS=-I$TACC_CUDA_INC'
    MAKE_OPTS='EXTRA_FLAGS=-I$TACC_CUDA_INC'
    SETUP_CMD="module -q load -$LMOD_FAMILY_MPI -$LMOD_FAMILY_COMPILER -xalt cuda"
    ;;

  ls6)
    echo "Building ls6"
    base="$HOME/l/pkg"
    EXTRA=""
    ETC_DIR="/tmp/moduleData"
    SYSHOST_CONF="hardcode:ls6"
    CONFIG="../Config/TACC_config.py"
    TRANSMISSION="file"
    TRACK_GPU="no"
    MYSQL="no"
    CONF_OPTS="$EXTRA"
    MAKE_OPTS=''
    SETUP_CMD="module -q unload $LMOD_FAMILY_MPI $LMOD_FAMILY_COMPILER xalt"
    ;;

  *)
    echo "default"
    base="$HOME/l/pkg"
    ETC_DIR="$HOME/l/moduleData"
    SYSHOST_CONF="nth_name:2"
    CONFIG="../Config/rtm_config.py"
    TRANSMISSION="file"
    TRACK_GPU="no"
    MYSQL="no"
    CONF_OPTS=''
    MAKE_OPTS=''
    ;;
esac
BASE_DIR=$base

pkgName=xalt
PKG=$BASE_DIR
GIT_VERSION=$(git describe --always)

$SUDO rm -rf $PKG/xalt/$PKG_VERSION

MAKE=make
command -v remake 2>&1 > /dev/null
if [ "$?" = 0 ]; then
  MAKE=remake
fi

unset LD_PRELOAD

unload_xalt ()
{
   type module > /dev/null 2>&1
   if [ "$?" = 0 ]; then
      echo "module -q unload xalt"
            module -q unload xalt
   fi
}

lazy_eval ()
{
  eval "CONF_OPTS=\"$CONF_OPTS\""
  eval "MAKE_OPTS=\"$MAKE_OPTS\""
}

report_git_version ()
{
   echo GIT_VERSION=$GIT_VERSION
}

cmdA=("unload_xalt"
      "-$MAKE distclean"
      "-rm -rf $PKG/xalt/$PKG_VERSION ./my_build"
      "-rm -f src/*.o src/*.d libuuid/src/*.o"
      "$SETUP_CMD"
      "report_git_version"
      "lazy_eval"
      "mkdir ./my_build"
      "cd ./my_build"
      "../configure --prefix=$PKG --with-etcDir=$ETC_DIR --with-syshostConfig=$SYSHOST_CONF --with-config=$CONFIG --with-transmission=$TRANSMISSION --with-MySQL=$MYSQL --with-trackGPU=$TRACK_GPU $CONF_OPTS"
      "$SUDO $MAKE -j4 $MAKE_OPTS GIT_VERSION=$GIT_VERSION install"
      "$SUDO $MAKE     $MAKE_OPTS GIT_VERSION=$GIT_VERSION Inst_TACC"
      "rm -f config.log"
      )


runMe "${cmdA[@]}"
