local_dir     	 := util

local_c_src   	 := buildJson.c          \
	            buildXALTRecordT.c   \
		    build_uuid.c         \
	            capture.c            \
		    compute_sha1.c       \
		    crcFast.c            \
		    epoch.c              \
                    extractMain.c        \
	            insert.c             \
	            process.c            \
		    transmit.c           \
		    xalt_c_utils.c       \
		    xalt_curl_transmit.c \
		    xalt_dir.c           \
		    xalt_epoch.c         \
		    xalt_fgets_alloc.c   \
		    xalt_quotestring.c   \
		    xalt_record_pkg.c    \
		    xalt_tmpdir.c        \
		    xalt_vendor_note.c

local_c_src   	 := $(addprefix $(local_dir)/, $(local_c_src))

local_cxx_src 	 := test_record_pkg.C            \
                    xalt_configuration_report.C
local_cxx_src  	 := $(addprefix $(local_dir)/, $(local_cxx_src))

EPOCH_X  	 := $(DESTDIR)$(LIBEXEC)/xalt_epoch
EPOCH_C	         := xalt_epoch.c epoch.c
EPOCH_C          := $(addprefix $(local_dir)/, $(EPOCH_C))
EPOCH_OBJ        := $(patsubst %.c, %.o, $(EPOCH_C))

EXTR_REC_X       := $(DESTDIR)$(LIBEXEC)/xalt_extract_record.x
EXTR_REC_C       := extractMain.c buildXALTRecordT.c capture.c  xalt_c_utils.c
EXTR_REC_C       := $(addprefix $(local_dir)/, $(EXTR_REC_C))
EXTR_REC_OBJ     := $(patsubst %.c, %.o, $(EXTR_REC_C))

CFG_RPT_X        := $(DESTDIR)$(LIBEXEC)/xalt_configuration_report.x
CFG_RPT_CXX      := xalt_configuration_report.C
CFG_RPT_CXX      := $(addprefix $(local_dir)/, $(CFG_RPT_CXX))
CFG_RPT_C        := epoch.c capture.c xalt_dir.c buildJson.c xalt_quotestring.c xalt_c_utils.c build_uuid.c
CFG_RPT_C        := $(addprefix $(local_dir)/, $(CFG_RPT_C)) $(CURDIR)/__build__/xalt_syshost.c linker/xalt_utils.C
CFG_RPT_OBJ      := $(patsubst %.C, %.o, $(CFG_RPT_CXX)) \
                    $(patsubst %.c, %.o, $(CFG_RPT_C))

TST_REC_PKG_X    := $(DESTDIR)$(LIBEXEC)/test_record_pkg
TST_REC_PKG_CXX  := test_record_pkg.C
TST_REC_PKG_CXX  := $(addprefix $(local_dir)/, $(TST_REC_PKG_CXX))
TST_REC_PKG_OBJ  := $(patsubst %.C, %.o, $(TST_REC_PKG_CXX))

REC_PKG_X        := $(DESTDIR)$(LIBEXEC)/xalt_record_pkg
REC_PKG_C        := xalt_record_pkg.c transmit.c xalt_c_utils.c xalt_quotestring.c build_uuid.c \
                    xalt_fgets_alloc.c xalt_tmpdir.c xalt_dir.c crcFast.c
REC_PKG_C        := $(addprefix $(local_dir)/, $(REC_PKG_C)) $(CURDIR)/__build__/xalt_syshost.c $(CURDIR)/__build__/xalt_pkg_filter.c
REC_PKG_OBJ      := $(patsubst %.c, %.o, $(REC_PKG_C))

CURL_TRANS_X     := $(DESTDIR)$(LIBEXEC)/xalt_curl_transmit
CURL_TRANS_C     := xalt_curl_transmit.c xalt_c_utils.c
CURL_TRANS_OBJ   := $(patsubst %.c, %.o, $(CURL_TRANS_C))


SYSHOST_X        := $(DESTDIR)$(BIN)/xalt_syshost

CRC_FAST_LIB     := $(DESTDIR)$(LIB64)/libcrcFast.so

PRE_INGEST_LIB   := $(DESTDIR)$(LIB64)/libpreIngest.so

PKG_FILTER_LIB   := $(DESTDIR)$(LIB64)/libpkgFilter.so

XALT_SUPPORT_CURL := @XALT_SUPPORT_CURL@

ifeq ($(XALT_SUPPORT_CURL),yes)
   LIBCURL := -lcurl
endif


#=====================================================================#
c_sources     	 += $(local_c_src) 
cxx_sources   	 += $(local_cxx_src)
programs      	 += $(EXTR_REC_X) $(EPOCH_X) $(CFG_RPT_X) $(REC_PKG_X) \
                    $(TST_REC_PKG_X) $(SYSHOST_X) $(CURL_TRANS_X)
libraries        += $(PRE_INGEST_LIB) $(PKG_FILTER_LIB) 
#=====================================================================#

$(EPOCH_X) : $(EPOCH_OBJ)
	$(LINK.c) $(OPTLVL) $(WARN_FLAGS) $(LDFLAGS) -o $@ $^
	chmod $(MODE_X) $@

$(EXTR_REC_X) : $(EXTR_REC_OBJ)
	$(LINK.c) $(OPTLVL) $(WARN_FLAGS) $(LDFLAGS) -o $@ $^ -lm
	chmod $(MODE_X) $@

$(CFG_RPT_X): $(CFG_RPT_OBJ)
	$(LINK.cc) $(OPTLVL) $(WARN_FLAGS) $(LDFLAGS) -o $@ $^
	chmod $(MODE_X) $@

$(REC_PKG_X): $(REC_PKG_OBJ)
	$(LINK.cc) $(OPTLVL) $(WARN_FLAGS) $(LDFLAGS) -o $@ $^ -ldl 
	chmod $(MODE_X) $@

$(TST_REC_PKG_X): $(TST_REC_PKG_OBJ)
	$(LINK.cc) $(OPTLVL) $(WARN_FLAGS) $(LDFLAGS) -o $@ $^
	chmod $(MODE_X) $@

$(SYSHOST_X): $(CURDIR)/__build__/xalt_syshost_main.o util/xalt_fgets_alloc.o util/xalt_c_utils.o
	$(LINK.c) $(OPTLVL) $(WARN_FLAGS) -o $@ $^ -lm
	chmod $(MODE_X) $@

$(CURDIR)/__build__/xalt_syshost_main.o : $(CURDIR)/__build__/xalt_syshost.c util/xalt_fgets_alloc.h util/xalt_c_utils.h
	$(COMPILE.c) -I$(THIS_DIR) -c -DHAVE_MAIN $(OPTLVL)  $(WARN_FLAGS) $(LDFLAGS) -o $@ $< 
	chmod $(MODE_R) $@

$(CURL_TRANS_X): $(CURL_TRANS_OBJ)
	$(LINK.c) $(OPTLVL) $(WARN_FLAGS) -o $@ $^ -Wl,-rpath,$(LIB64) -L$(LIB64)  -lm $(LIBCURL)
	chmod $(MODE_X) $@

$(CRC_FAST_LIB): crcFast.c
	$(LINK.c) $(CF_FLAGS) $(LIB_OPTIONS) -o $@ $^
	chmod $(MODE_X) $@

$(CURDIR)/__build__/xalt_pre_ingest_filter.c: $(CURDIR)/__build__/xalt_pre_ingest_filter.lex
	flex -P xalt_pre_ingest -o $@ $^
$(CURDIR)/__build__/xalt_pre_ingest_filter.o: $(CURDIR)/__build__/xalt_pre_ingest_filter.c
	$(COMPILE.c) -I$(THIS_DIR) $(OPTLVL) $(WARN_FLAGS) -Wno-unused-function -o $@ $^
$(PRE_INGEST_LIB): $(CURDIR)/__build__/xalt_pre_ingest_filter.o 
	$(LINK.c) $(CF_FLAGS) $(LIB_OPTIONS) -o $@ $^
	chmod $(MODE_X) $@


$(CURDIR)/__build__/xalt_pkg_filter.c: $(CURDIR)/__build__/xalt_pkg_filter.lex
	flex -P xalt_pkg_filter -o $@ $^
$(CURDIR)/__build__/xalt_pkg_filter.o: $(CURDIR)/__build__/xalt_pkg_filter.c
	$(COMPILE.c) -I$(THIS_DIR) $(OPTLVL) $(WARN_FLAGS) -Wno-unused-function -o $@ $^
$(PKG_FILTER_LIB): $(CURDIR)/__build__/xalt_pkg_filter.o util/xalt_c_utils.o
	$(LINK.c) $(CF_FLAGS) $(LIB_OPTIONS) -o $@ $^
	chmod $(MODE_X) $@
